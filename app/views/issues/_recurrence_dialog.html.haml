- require File.dirname(__FILE__) + '/../../helpers/recurring_planning_helper.rb'
- extend RecurringPlanningHelper

%h3.title= "Автопланирование"

= form_tag({controller: 'recurring_planning', action: 'create'}, id: 'schedule_form') do 

  = hidden_field_tag 'id', @issue.id

  = select_tag 'rule_type', rule_type_options, :onchange => "switchRecurrencePeriod(this.value)", :style => 'width: 100%'

  %div{id: 'recurrence-details', style: 'display: none;'}

    %table
      %tr
        %td
          = l(:label_recurrence_period) + ':'
          = text_field_tag 'interval', "1", :style => 'width: 10%; text-align: right;', :id => 'schedule_interval'

        %td
          = l(:label_amount_per_day) + ':'
          = text_field_tag 'amount', "1.0", :style => 'width: 15%; text-align: right;', :id => 'schedule_amount'

    %div{id: 'recurrence-weekly', style: 'display: none;'}
      = weekdays_options
      
    %div{id: 'recurrence-monthly', style: 'display: none;'}
      = label_tag :monthly_type, "По числам", :value => "by_date"  
      = radio_button_tag :monthly_type, "by_date", true, :onclick => "switchMonthlySelector(this.value);"
      = label_tag :monthly_type, "По дням недели", :value => "by_weekday" 
      = radio_button_tag :monthly_type, "by_weekday", false, :onclick => "switchMonthlySelector(this.value);"  

      %div{id: 'recurrence-monthly-by-date', style: 'display: none;'}
        = monthly_dates_options
      
      %div{id: 'recurrence-monthly-by-weekday', style: 'display: none; margin-top: 20px; margin-bottom: 20px;'}
        = monthly_weekdays_options

  = submit_tag l(:button_save)

:javascript

  $('#schedule_form').submit(function(event) {
    if( ($('#schedule_interval').val() == "" || $('#schedule_amount').val() == "") && $('#rule_type').val() != 'none' )  {
      event.preventDefault();
    } else {
      form.submit()
    }
  });

  function switchRecurrencePeriod(arg) { 

    $("#recurrence-weekly").css("display", "none");
    $("#recurrence-monthly").css("display", "none");

    if(arg == "none") {
      $("#recurrence-details").css("display", "none"); 
    } else {
      $("#recurrence-details").css("display", "block"); 
      switch(arg){
        case "IceCube::WeeklyRule":
          $("#recurrence-weekly").css("display", "block"); 
          break;
        case "IceCube::MonthlyRule":
          $("#recurrence-monthly").css("display", "block");      
          $("#recurrence-monthly-by-date").css("display", "block"); 
          break;
      }
    }
  }

  function switchMonthlySelector(arg) {
    $("#recurrence-monthly-by-date").css("display", "none"); 
    $("#recurrence-monthly-by-weekday").css("display", "none");      
    switch(arg){
        case "by_date":
          $("#recurrence-monthly-by-date").css("display", "block"); 
          break;
        case "by_weekday":
          $("#recurrence-monthly-by-weekday").css("display", "block");      
          break;
      }
  }
